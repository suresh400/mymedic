{"version":3,"file":"static/js/139.1217f9e6.chunk.js","mappings":"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","sources":["components/Footer.jsx","pages/Appointments.jsx"],"sourcesContent":["import React from \"react\";\nimport \"../styles/footer.css\";\nimport { FaFacebookF, FaYoutube, FaInstagram } from \"react-icons/fa\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <>\n      <footer>\n        <div className=\"footer\">\n          <div className=\"footer-links\">\n            <h3>Links</h3>\n            <ul>\n              <li>\n                <NavLink to={\"/\"}>Home</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/doctors\"}>Doctors</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/appointments\"}>Appointments</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/notifications\"}>Notifications</NavLink>\n              </li>\n              <li>\n                <HashLink to={\"/#contact\"}>Contact Us</HashLink>\n              </li>\n              <li>\n                <NavLink to={\"/profile\"}>Profile</NavLink>\n              </li>\n            </ul>\n          </div>\n          <div className=\"social\">\n            <h3>Social links</h3>\n            <ul>\n              <li className=\"facebook\">\n                <a\n                  href=\"https://www.facebook.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaFacebookF />\n                </a>\n              </li>\n              <li className=\"youtube\">\n                <a\n                  href=\"https://www.youtube.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaYoutube />\n                </a>\n              </li>\n              <li className=\"instagram\">\n                <a\n                  href=\"https://www.instagram.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaInstagram />\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"footer-bottom\">\n          Copy Right\n          Â© {new Date().getFullYear()}\n        </div>\n      </footer>\n    </>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Empty from \"../components/Empty\";\nimport Footer from \"../components/Footer\";\nimport Navbar from \"../components/Navbar\";\nimport fetchData from \"../helper/apiCall\";\nimport { setLoading } from \"../redux/reducers/rootSlice\";\nimport Loading from \"../components/Loading\";\nimport { toast } from \"react-hot-toast\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport \"../styles/user.css\";\n\nconst Appointments = () => {\n  const [appointments, setAppointments] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const PerPage = 5;\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n  const { userId } = jwt_decode(localStorage.getItem(\"token\"));\n\n  const getAllAppoint = async () => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(\n        `/appointment/getallappointments?search=${userId}`\n      );\n      setAppointments(temp);\n      dispatch(setLoading(false));\n    } catch (error) {\n      console.error(\"Error fetching appointments:\", error);\n      toast.error(\"Failed to fetch appointments. Please try again.\");\n    }\n  };\n\n  useEffect(() => {\n    getAllAppoint();\n  }, []);\n\n  const totalPages = Math.ceil(appointments.length / PerPage);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const renderPagination = () => {\n    const pages = [];\n    for (let i = 1; i <= totalPages; i++) {\n      pages.push(\n        <button key={i} onClick={() => handlePageChange(i)}>\n          {i}\n        </button>\n      );\n    }\n    return pages;\n  };\n\n  const paginatedAppointments = appointments.slice(\n    (currentPage - 1) * PerPage,\n    currentPage * PerPage\n  );\n\n  const completeAppointment = async (appointment) => {\n    try {\n      await axios.put(\n        \"/appointment/completed\",\n        {\n          appointid: appointment._id,\n          doctorId: appointment.doctorId._id,\n          doctorname: `${appointment.userId.firstname} ${appointment.userId.lastname}`,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      );\n      toast.success(\"Appointment completed successfully.\");\n      getAllAppoint();\n    } catch (error) {\n      console.error(\"Error completing appointment:\", error);\n      toast.error(\"Failed to complete appointment. Please try again.\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar />\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"container notif-section\">\n          <h2 className=\"page-heading\">Your Appointments</h2>\n\n          {appointments.length > 0 ? (\n            <div className=\"appointments\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S.No</th>\n                    <th>Doctor</th>\n                    <th>P Name</th>\n                    <th>P Age</th>\n                    <th>P Gender</th>\n                    <th>P Mobile No.</th>\n                    <th>P bloodGroup</th>\n                    <th>P Family Diseases</th>\n                    <th>Appointment Date</th>\n                    <th>Status</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {paginatedAppointments.map((appointment, index) => (\n                    <tr key={appointment._id}>\n                      <td>{(currentPage - 1) * PerPage + index + 1}</td>\n                      <td>{`${appointment.doctorId.firstname} ${appointment.doctorId.lastname}`}</td>\n                      <td>{`${appointment.userId.firstname} ${appointment.userId.lastname}`}</td>\n                      <td>{appointment.age}</td> \n                      <td>{appointment.gender}</td>\n                      <td>{appointment.number}</td>\n                      <td>{appointment.bloodGroup}</td>\n                      <td>{appointment.familyDiseases}</td>\n                      <td>{appointment.date}</td>\n                      <td>{appointment.status}</td>\n                      <td>\n                        <button\n                          className=\"btn user-btn complete-btn\"\n                          onClick={() => completeAppointment(appointment)}\n                          disabled={appointment.status === \"Completed\"}\n                        >\n                          Complete\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <div className=\"pagination\">{renderPagination()}</div>\n            </div>\n          ) : (\n            <Empty message=\"No appointments found.\" />\n          )}\n        </section>\n      )}\n      <Footer />\n    </>\n  );\n};\n\nexport default Appointments;\n"],"names":["Footer","_jsx","_Fragment","children","_jsxs","className","NavLink","to","HashLink","href","target","rel","FaFacebookF","FaYoutube","FaInstagram","Date","getFullYear","Appointments","appointments","setAppointments","useState","currentPage","setCurrentPage","dispatch","useDispatch","loading","useSelector","state","root","userId","jwt_decode","localStorage","getItem","getAllAppoint","async","setLoading","temp","fetchData","error","console","toast","useEffect","totalPages","Math","ceil","length","paginatedAppointments","slice","Navbar","Loading","map","appointment","index","doctorId","firstname","lastname","age","gender","number","bloodGroup","familyDiseases","date","status","onClick","axios","put","appointid","_id","doctorname","headers","Authorization","success","completeAppointment","disabled","renderPagination","pages","i","push","Empty","message"],"sourceRoot":""}