{"version":3,"file":"static/js/181.8b81a28d.chunk.js","mappings":"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","sources":["components/Footer.jsx","pages/Notifications.jsx"],"sourcesContent":["import React from \"react\";\nimport \"../styles/footer.css\";\nimport { FaFacebookF, FaYoutube, FaInstagram } from \"react-icons/fa\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <>\n      <footer>\n        <div className=\"footer\">\n          <div className=\"footer-links\">\n            <h3>Links</h3>\n            <ul>\n              <li>\n                <NavLink to={\"/\"}>Home</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/doctors\"}>Doctors</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/appointments\"}>Appointments</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/notifications\"}>Notifications</NavLink>\n              </li>\n              <li>\n                <HashLink to={\"/#contact\"}>Contact Us</HashLink>\n              </li>\n              <li>\n                <NavLink to={\"/profile\"}>Profile</NavLink>\n              </li>\n            </ul>\n          </div>\n          <div className=\"social\">\n            <h3>Social links</h3>\n            <ul>\n              <li className=\"facebook\">\n                <a\n                  href=\"https://www.facebook.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaFacebookF />\n                </a>\n              </li>\n              <li className=\"youtube\">\n                <a\n                  href=\"https://www.youtube.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaYoutube />\n                </a>\n              </li>\n              <li className=\"instagram\">\n                <a\n                  href=\"https://www.instagram.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaInstagram />\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"footer-bottom\">\n          Copy Right\n          Â© {new Date().getFullYear()}\n        </div>\n      </footer>\n    </>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../styles/notification.css\";\nimport Empty from \"../components/Empty\";\nimport Footer from \"../components/Footer\";\nimport Navbar from \"../components/Navbar\";\nimport fetchData from \"../helper/apiCall\";\nimport { setLoading } from \"../redux/reducers/rootSlice\";\nimport Loading from \"../components/Loading\";\nimport \"../styles/user.css\";\n\nconst Notifications = () => {\n  const [notifications, setNotifications] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const notificationsPerPage = 8;\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n\n  const getAllNotif = async () => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(`/notification/getallnotifs?page=${currentPage - 1}&limit=${notificationsPerPage}`);\n      dispatch(setLoading(false));\n      setNotifications(temp);\n    } catch (error) {\n      console.error(\"Error fetching notifications:\", error);\n    }\n  };\n\n  useEffect(() => {\n    getAllNotif();\n  }, [currentPage]);\n\n  const totalPages = Math.ceil(notifications.length / notificationsPerPage);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const renderPagination = () => {\n    const pages = [];\n    for (let i = 1; i <= totalPages; i++) {\n      pages.push(\n        <button key={i} onClick={() => handlePageChange(i)}>{i}</button>\n      );\n    }\n    return pages;\n  };\n\n  const paginatedNotifications = notifications.slice(\n    (currentPage - 1) * notificationsPerPage,\n    currentPage * notificationsPerPage\n  );\n\n  return (\n    <>\n      <Navbar />\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"container notif-section\">\n          <h2 className=\"page-heading\">Your Notifications</h2>\n\n          {notifications.length > 0 ? (\n            <div className=\"notifications\">\n              <table>\n                <thead>\n                  <tr>\n                    <th style={{ marginLeft: \"5rem\" }}>S.No</th>\n                    <th>Content</th>\n                    <th>Date</th>\n                    <th>Time</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {paginatedNotifications.map((ele, i) => (\n                    <tr key={ele?._id}>\n                      <td>{(currentPage - 1) * notificationsPerPage + i + 1}</td>\n                      <td>{ele?.content}</td>\n                      <td>{ele?.updatedAt.split(\"T\")[0]}</td>\n                      <td>{ele?.updatedAt.split(\"T\")[1].split(\".\")[0]}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <div className=\"pagination\">{renderPagination()}</div>\n            </div>\n          ) : (\n            <Empty />\n          )}\n        </section>\n      )}\n      <Footer />\n    </>\n  );\n};\n\nexport default Notifications;\n"],"names":["Footer","_jsx","_Fragment","children","_jsxs","className","NavLink","to","HashLink","href","target","rel","FaFacebookF","FaYoutube","FaInstagram","Date","getFullYear","Notifications","notifications","setNotifications","useState","currentPage","setCurrentPage","dispatch","useDispatch","loading","useSelector","state","root","useEffect","async","setLoading","temp","fetchData","error","console","getAllNotif","totalPages","Math","ceil","length","paginatedNotifications","slice","Navbar","Loading","style","marginLeft","map","ele","i","content","updatedAt","split","_id","renderPagination","pages","push","onClick","Empty"],"sourceRoot":""}